{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"iostream":{
		"scope": "c, cpp",
		"prefix": "iostream",
		"body": "#include <iostream>",
		"description": "Include iostream library"
	},
	"namespace":{
		"scope": "c, cpp",
		"prefix": "using",
		"body": "using namespace std;",
		"description": "Include namespace std"
	},
	"çp+":{
		"scope": "cpp",
		"prefix": "çp+",
		"body": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    return 0;\n}",
		"description": "Template for cp programming"
	}

}